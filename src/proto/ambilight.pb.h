/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_AMBILIGHT_PB_H_INCLUDED
#define PB_AMBILIGHT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Example { 
    bool has_type;
    int32_t type;
    bool has_name;
    char name[41];
} Example;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Example_init_default                     {false, 0, false, ""}
#define Example_init_zero                        {false, 0, false, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Example_type_tag                         1
#define Example_name_tag                         2

/* Struct field encoding specification for nanopb */
#define Example_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    type,              1) \
X(a, STATIC,   OPTIONAL, STRING,   name,              2)
#define Example_CALLBACK NULL
#define Example_DEFAULT NULL

extern const pb_msgdesc_t Example_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Example_fields &Example_msg

/* Maximum encoded size of messages (where known) */
#define Example_size                             53

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
